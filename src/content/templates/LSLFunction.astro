---
import { Code, FileTree } from "@astrojs/starlight/components";
import definitions from '../data/lsl_definitions.json';

const mapFunctionArguments = arg => {
	const name = Object.keys(arg)[0];
	const param = arg[name];
	const type = param.type || 'unknown';
	const description = param.tooltip || param.description? param.tooltip || param.description : undefined;
	const index_semantics = param.index_semantics;
	return { name, type, description, index_semantics };
};

const { name } = Astro.props;
const definition = definitions.functions[name];
const {
	returnType = definition.return || 'void',
	arguments: args = definition.arguments?.map(mapFunctionArguments),
	energy = definition.energy,
	sleep = 'mono_sleep' in definition? definition.mono_sleep : definition.sleep
} = Astro.props;
---

<div class="function-syntax not-content">
	<small class="title">Function Syntax</small>
	<div class="function"><span class="type">{returnType}</span> <span class="name">{name}</span>(</div>
	{args && <ol class="arguments">{args.map(({ name, type, description }, index, array) => (
		<li class="argument"><span class="type">{type}</span> <span class="name">{name}</span>{index < array.length - 1 && ','} {description && <span class="description">// {description}</span>}</li>
	))}</ol>}
	);
</div>
